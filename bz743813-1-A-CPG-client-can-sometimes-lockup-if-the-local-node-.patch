From ac1d79ea7c14997353427e962865781d0836d9fa Mon Sep 17 00:00:00 2001
From: Tim Beale <tim.beale@alliedtelesis.co.nz>
Date: Thu, 18 Aug 2011 14:57:10 +0200
Subject: [PATCH] A CPG client can sometimes lockup if the local node is in the downlist

In a 10-node cluster where all nodes are booting up and starting corosync
at the same time, sometimes during this process corosync detects a node as
leaving and rejoining the cluster.

Occasionally the downlist that gets picked contains the local node. When the
local node sends leave events for the downlist (including itself), it sets
its cpd state to CPD_STATE_UNJOINED and clears the cpd->group_name. This
means it no longer sends CPG events to the CPG client.

Reviewed-by: Jan Friesse <jfriesse@redhat.com>
(cherry picked from commit 08f07be323b777118264eb37413393065b360f8e)
---
 services/cpg.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/services/cpg.c b/services/cpg.c
index 8d7dd72..d7a26f2 100644
--- a/services/cpg.c
+++ b/services/cpg.c
@@ -683,7 +683,8 @@ static int notify_lib_joinlist(
 				}
 				if (left_list_entries) {
 					if (left_list[0].pid == cpd->pid &&
-						left_list[0].nodeid == api->totem_nodeid_get()) {
+						left_list[0].nodeid == api->totem_nodeid_get() &&
+						left_list[0].reason == CONFCHG_CPG_REASON_LEAVE) {
 
 						cpd->pid = 0;
 						memset (&cpd->group_name, 0, sizeof(cpd->group_name));
-- 
1.7.1

